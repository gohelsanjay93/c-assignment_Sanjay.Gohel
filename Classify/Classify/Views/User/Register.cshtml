@model Classify.Models.User
@if (TempData.ContainsKey("Error"))
{
    <script>
    swal({
        title: "Oh ruh ruh!",
        text: "@TempData["Error"].ToString()",
        icon: "warning"
    });
    </script>
}
<section id="formSubmit">
    <div class="container">
        <div class="row">
            <div class="col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3">
                <div class="user-form">
                    <div class="user-form-set">
                        <h4>REGISTER</h4>
                        <form method="post" action="/User/Register" class="form-group">
                            @Html.AntiForgeryToken()
                            <div class="form-input">
                                <span class="fa fa-user form-control-feedback"></span>
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Firstname" } })
                                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <span class="fa fa-user form-control-feedback"></span>
                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Lastname" } })
                                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <span class="fa fa-user form-control-feedback"></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <span class="fa fa-phone form-control-feedback"></span>
                                @Html.EditorFor(model => model.Contactnumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Contactnumber" } })
                                @Html.ValidationMessageFor(model => model.Contactnumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <span class="fa fa-home form-control-feedback"></span>
                                @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @style = "width:100%;" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            <!--Ajax usage start-->
                            <div class="form-input">
                                <select name="Country" id="Country" class="form-control"></select>
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <select name="State" id="State" class="form-control"></select>
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <select name="City" id="City" class="form-control"></select>
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <!--Ajax usage end-->
                            <div class="form-input">
                                <span class="fa fa-code form-control-feedback"></span>
                                @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Zipcode" } })
                                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-input">
                                <span class="fa fa-unlock-alt form-control-feedback"></span>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password", type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                            @*<div class="form-input">
            <input type="checkbox">
            <label>Remember me</label>
        </div>*@
                            <div class="form-input">
                                <input type="submit" name="register" value="Register Now">
                            </div>
                        </form>
                        <p>Have account? <a href="/User/Login" class="col">Log in</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")

<script src="~/Scripts/jquery.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/owl.carousel.js"></script>
<script src="~/Scripts/default.js"></script>
<script src="~/Scripts/Custom.js"></script>